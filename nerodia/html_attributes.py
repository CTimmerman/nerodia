# Autogenerated from HTML specification. Edits may be lost.

htmlelement = [
    (str, 'title', 'title'),
    (str, 'lang', 'lang'),
    (bool, 'translate', 'translate'),
    (str, 'dir', 'dir'),
    (str, 'dataset', 'dataset'),
    (bool, 'item_scope', 'itemScope'),
    (str, 'item_type', 'itemType'),
    (str, 'item_id', 'itemId'),
    (str, 'item_ref', 'itemRef'),
    (str, 'item_prop', 'itemProp'),
    (str, 'properties', 'properties'),
    (str, 'item_value', 'itemValue'),
    (bool, 'hidden', 'hidden'),
    (int, 'tab_index', 'tabIndex'),
    (str, 'access_key', 'accessKey'),
    (str, 'access_key_label', 'accessKeyLabel'),
    (bool, 'draggable', 'draggable'),
    (str, 'dropzone', 'dropzone'),
    (str, 'context_menu', 'contextMenu'),
    (bool, 'spellcheck', 'spellcheck'),
    (str, 'command_type', 'commandType'),
    (str, 'command_label', 'commandLabel'),
    (str, 'command_icon', 'commandIcon'),
    (bool, 'command_hidden', 'commandHidden'),
    (bool, 'command_disabled', 'commandDisabled'),
    (bool, 'command_checked', 'commandChecked'),
    (str, 'onabort', 'onabort'),
    (str, 'onautocomplete', 'onautocomplete'),
    (str, 'onautocompleteerror', 'onautocompleteerror'),
    (str, 'onblur', 'onblur'),
    (str, 'oncancel', 'oncancel'),
    (str, 'oncanplay', 'oncanplay'),
    (str, 'oncanplaythrough', 'oncanplaythrough'),
    (str, 'onchange', 'onchange'),
    (str, 'onclick', 'onclick'),
    (str, 'onclose', 'onclose'),
    (str, 'oncontextmenu', 'oncontextmenu'),
    (str, 'oncuechange', 'oncuechange'),
    (str, 'ondblclick', 'ondblclick'),
    (str, 'ondrag', 'ondrag'),
    (str, 'ondragend', 'ondragend'),
    (str, 'ondragenter', 'ondragenter'),
    (str, 'ondragexit', 'ondragexit'),
    (str, 'ondragleave', 'ondragleave'),
    (str, 'ondragover', 'ondragover'),
    (str, 'ondragstart', 'ondragstart'),
    (str, 'ondrop', 'ondrop'),
    (str, 'ondurationchange', 'ondurationchange'),
    (str, 'onemptied', 'onemptied'),
    (str, 'onended', 'onended'),
    (str, 'onerror', 'onerror'),
    (str, 'onfocus', 'onfocus'),
    (str, 'oninput', 'oninput'),
    (str, 'oninvalid', 'oninvalid'),
    (str, 'onkeydown', 'onkeydown'),
    (str, 'onkeypress', 'onkeypress'),
    (str, 'onkeyup', 'onkeyup'),
    (str, 'onload', 'onload'),
    (str, 'onloadeddata', 'onloadeddata'),
    (str, 'onloadedmetadata', 'onloadedmetadata'),
    (str, 'onloadstart', 'onloadstart'),
    (str, 'onmousedown', 'onmousedown'),
    (str, 'onmouseenter', 'onmouseenter'),
    (str, 'onmouseleave', 'onmouseleave'),
    (str, 'onmousemove', 'onmousemove'),
    (str, 'onmouseout', 'onmouseout'),
    (str, 'onmouseover', 'onmouseover'),
    (str, 'onmouseup', 'onmouseup'),
    (str, 'onmousewheel', 'onmousewheel'),
    (str, 'onpause', 'onpause'),
    (str, 'onplay', 'onplay'),
    (str, 'onplaying', 'onplaying'),
    (str, 'onprogress', 'onprogress'),
    (str, 'onratechange', 'onratechange'),
    (str, 'onreset', 'onreset'),
    (str, 'onresize', 'onresize'),
    (str, 'onscroll', 'onscroll'),
    (str, 'onseeked', 'onseeked'),
    (str, 'onseeking', 'onseeking'),
    (str, 'onselect', 'onselect'),
    (str, 'onshow', 'onshow'),
    (str, 'onsort', 'onsort'),
    (str, 'onstalled', 'onstalled'),
    (str, 'onsubmit', 'onsubmit'),
    (str, 'onsuspend', 'onsuspend'),
    (str, 'ontimeupdate', 'ontimeupdate'),
    (str, 'ontoggle', 'ontoggle'),
    (str, 'onvolumechange', 'onvolumechange'),
    (str, 'onwaiting', 'onwaiting'),
    (str, 'content_editable', 'contentEditable'),
    (bool, 'content_editable', 'isContentEditable')
]

HTMLElementCollection = []

font = [
    (str, 'color', 'color'),
    (str, 'face', 'face'),
    (str, 'size', 'size')
]

FontCollection = []

directory = [
    (bool, 'compact', 'compact')
]

DirectoryCollection = []

frameset = [
    (str, 'cols', 'cols'),
    (str, 'onafterprint', 'onafterprint'),
    (str, 'onbeforeprint', 'onbeforeprint'),
    (str, 'onbeforeunload', 'onbeforeunload'),
    (str, 'onhashchange', 'onhashchange'),
    (str, 'onlanguagechange', 'onlanguagechange'),
    (str, 'onmessage', 'onmessage'),
    (str, 'onoffline', 'onoffline'),
    (str, 'ononline', 'ononline'),
    (str, 'onpagehide', 'onpagehide'),
    (str, 'onpageshow', 'onpageshow'),
    (str, 'onpopstate', 'onpopstate'),
    (str, 'onstorage', 'onstorage'),
    (str, 'onunload', 'onunload')
]

FrameSetCollection = []

marquee = [
    (str, 'behavior', 'behavior'),
    (str, 'bg_color', 'bgColor'),
    (str, 'direction', 'direction'),
    (str, 'height', 'height'),
    (int, 'hspace', 'hspace'),
    (int, 'loop', 'loop'),
    (int, 'scroll_amount', 'scrollAmount'),
    (int, 'scroll_delay', 'scrollDelay'),
    (bool, 'true_speed', 'trueSpeed'),
    (int, 'vspace', 'vspace'),
    (str, 'width', 'width'),
    (str, 'onbounce', 'onbounce'),
    (str, 'onfinish', 'onfinish'),
    (str, 'onstart', 'onstart')
]

MarqueeCollection = []

applet = [
    (str, 'align', 'align'),
    (str, 'alt', 'alt'),
    (str, 'archive', 'archive'),
    (str, 'code', 'code'),
    (str, 'code_base', 'codeBase'),
    (str, 'height', 'height'),
    (int, 'hspace', 'hspace'),
    (str, 'name', 'name'),
    (str, 'object', 'object'),
    (int, 'vspace', 'vspace'),
    (str, 'width', 'width')
]

AppletCollection = []

canvas = [
    (int, 'width', 'width'),
    (int, 'height', 'height')
]

CanvasCollection = []

template = [
    (str, 'content', 'content')
]

TemplateCollection = []

script = [
    (str, 'src', 'src'),
    (str, 'type', 'type'),
    (str, 'charset', 'charset'),
    (bool, 'async', 'async'),
    (bool, 'defer', 'defer'),
    (str, 'cross_origin', 'crossOrigin'),
    (str, 'event', 'event'),
    (str, 'for', 'htmlFor')
]

ScriptCollection = []

dialog = [
    (bool, 'open', 'open'),
    (str, 'return_value', 'returnValue')
]

DialogCollection = []

menuitem = [
    (str, 'type', 'type'),
    (str, 'label', 'label'),
    (str, 'icon', 'icon'),
    (bool, 'disabled', 'disabled'),
    (bool, 'checked', 'checked'),
    (str, 'radiogroup', 'radiogroup'),
    (bool, 'default', 'default'),
    (str, 'command', 'command')
]

MenuItemCollection = []

menu = [
    (str, 'type', 'type'),
    (str, 'label', 'label'),
    (bool, 'compact', 'compact')
]

MenuCollection = []

details = [
    (bool, 'open', 'open')
]

DetailsCollection = []

legend = [
    (str, 'form', 'form'),
    (str, 'align', 'align')
]

LegendCollection = []

fieldset = [
    (bool, 'disabled', 'disabled'),
    (str, 'form', 'form'),
    (str, 'name', 'name'),
    (str, 'type', 'type'),
    (bool, 'will_validate', 'willValidate'),
    (str, 'validity', 'validity'),
    (str, 'validation_message', 'validationMessage')
]

FieldSetCollection = []

meter = [
    (float, 'value', 'value'),
    (float, 'min', 'min'),
    (float, 'max', 'max'),
    (float, 'low', 'low'),
    (float, 'high', 'high'),
    (float, 'optimum', 'optimum'),
    (str, 'labels', 'labels')
]

MeterCollection = []

progress = [
    (float, 'value', 'value'),
    (float, 'max', 'max'),
    (float, 'position', 'position'),
    (str, 'labels', 'labels')
]

ProgressCollection = []

output = [
    (str, 'for', 'htmlFor'),
    (str, 'form', 'form'),
    (str, 'name', 'name'),
    (str, 'type', 'type'),
    (str, 'default_value', 'defaultValue'),
    (str, 'value', 'value'),
    (bool, 'will_validate', 'willValidate'),
    (str, 'validity', 'validity'),
    (str, 'validation_message', 'validationMessage'),
    (str, 'labels', 'labels')
]

OutputCollection = []

keygen = [
    (bool, 'autofocus', 'autofocus'),
    (str, 'challenge', 'challenge'),
    (bool, 'disabled', 'disabled'),
    (str, 'form', 'form'),
    (str, 'keytype', 'keytype'),
    (str, 'name', 'name'),
    (str, 'type', 'type'),
    (bool, 'will_validate', 'willValidate'),
    (str, 'validity', 'validity'),
    (str, 'validation_message', 'validationMessage'),
    (str, 'labels', 'labels')
]

KeygenCollection = []

textarea = [
    (str, 'autocomplete', 'autocomplete'),
    (bool, 'autofocus', 'autofocus'),
    (int, 'cols', 'cols'),
    (str, 'dir_name', 'dirName'),
    (bool, 'disabled', 'disabled'),
    (str, 'form', 'form'),
    (str, 'input_mode', 'inputMode'),
    (int, 'max_length', 'maxLength'),
    (int, 'min_length', 'minLength'),
    (str, 'name', 'name'),
    (str, 'placeholder', 'placeholder'),
    (bool, 'read_only', 'readOnly'),
    (bool, 'required', 'required'),
    (str, 'wrap', 'wrap'),
    (str, 'type', 'type'),
    (str, 'default_value', 'defaultValue'),
    (str, 'value', 'value'),
    (int, 'text_length', 'textLength'),
    (bool, 'will_validate', 'willValidate'),
    (str, 'validity', 'validity'),
    (str, 'validation_message', 'validationMessage'),
    (str, 'labels', 'labels'),
    (int, 'selection_start', 'selectionStart'),
    (int, 'selection_end', 'selectionEnd'),
    (str, 'selection_direction', 'selectionDirection')
]

TextAreaCollection = []

option = [
    (bool, 'disabled', 'disabled'),
    (str, 'form', 'form'),
    (str, 'label', 'label'),
    (bool, 'default_selected', 'defaultSelected'),
    (bool, 'selected', 'selected'),
    (str, 'value', 'value'),
    (int, 'index', 'index')
]

OptionCollection = []

optgroup = [
    (bool, 'disabled', 'disabled'),
    (str, 'label', 'label')
]

OptGroupCollection = []

datalist = [
    (str, 'options', 'options')
]

DataListCollection = []

select = [
    (str, 'autocomplete', 'autocomplete'),
    (bool, 'autofocus', 'autofocus'),
    (bool, 'disabled', 'disabled'),
    (str, 'form', 'form'),
    (bool, 'multiple', 'multiple'),
    (str, 'name', 'name'),
    (bool, 'required', 'required'),
    (int, 'size', 'size'),
    (str, 'type', 'type'),
    (int, 'length', 'length'),
    (str, 'selected_options', 'selectedOptions'),
    (int, 'selected_index', 'selectedIndex'),
    (str, 'value', 'value'),
    (bool, 'will_validate', 'willValidate'),
    (str, 'validity', 'validity'),
    (str, 'validation_message', 'validationMessage'),
    (str, 'labels', 'labels')
]

SelectCollection = []

button = [
    (bool, 'autofocus', 'autofocus'),
    (bool, 'disabled', 'disabled'),
    (str, 'form', 'form'),
    (str, 'form_action', 'formAction'),
    (str, 'form_enctype', 'formEnctype'),
    (str, 'form_method', 'formMethod'),
    (bool, 'form_no_validate', 'formNoValidate'),
    (str, 'form_target', 'formTarget'),
    (str, 'name', 'name'),
    (str, 'type', 'type'),
    (str, 'value', 'value'),
    (str, 'menu', 'menu'),
    (bool, 'will_validate', 'willValidate'),
    (str, 'validity', 'validity'),
    (str, 'validation_message', 'validationMessage'),
    (str, 'labels', 'labels')
]

ButtonCollection = []

input = [
    (str, 'accept', 'accept'),
    (str, 'alt', 'alt'),
    (str, 'autocomplete', 'autocomplete'),
    (bool, 'autofocus', 'autofocus'),
    (bool, 'default_checked', 'defaultChecked'),
    (bool, 'checked', 'checked'),
    (str, 'dir_name', 'dirName'),
    (bool, 'disabled', 'disabled'),
    (str, 'form', 'form'),
    (str, 'files', 'files'),
    (str, 'form_action', 'formAction'),
    (str, 'form_enctype', 'formEnctype'),
    (str, 'form_method', 'formMethod'),
    (bool, 'form_no_validate', 'formNoValidate'),
    (str, 'form_target', 'formTarget'),
    (int, 'height', 'height'),
    (bool, 'indeterminate', 'indeterminate'),
    (str, 'input_mode', 'inputMode'),
    (str, 'list', 'list'),
    (str, 'max', 'max'),
    (int, 'max_length', 'maxLength'),
    (str, 'min', 'min'),
    (int, 'min_length', 'minLength'),
    (bool, 'multiple', 'multiple'),
    (str, 'name', 'name'),
    (str, 'pattern', 'pattern'),
    (str, 'placeholder', 'placeholder'),
    (bool, 'read_only', 'readOnly'),
    (bool, 'required', 'required'),
    (int, 'size', 'size'),
    (str, 'src', 'src'),
    (str, 'step', 'step'),
    (str, 'type', 'type'),
    (str, 'default_value', 'defaultValue'),
    (str, 'value', 'value'),
    (str, 'value_as_date', 'valueAsDate'),
    (float, 'value_as_number', 'valueAsNumber'),
    (float, 'value_low', 'valueLow'),
    (float, 'value_high', 'valueHigh'),
    (int, 'width', 'width'),
    (bool, 'will_validate', 'willValidate'),
    (str, 'validity', 'validity'),
    (str, 'validation_message', 'validationMessage'),
    (str, 'labels', 'labels'),
    (int, 'selection_start', 'selectionStart'),
    (int, 'selection_end', 'selectionEnd'),
    (str, 'selection_direction', 'selectionDirection'),
    (str, 'align', 'align'),
    (str, 'use_map', 'useMap')
]

InputCollection = []

label = [
    (str, 'form', 'form'),
    (str, 'for', 'htmlFor'),
    (str, 'control', 'control')
]

LabelCollection = []

form = [
    (str, 'accept_charset', 'acceptCharset'),
    (str, 'action', 'action'),
    (str, 'autocomplete', 'autocomplete'),
    (str, 'enctype', 'enctype'),
    (str, 'encoding', 'encoding'),
    (str, 'method', 'method'),
    (str, 'name', 'name'),
    (bool, 'no_validate', 'noValidate'),
    (str, 'target', 'target'),
    (int, 'length', 'length')
]

FormCollection = []

tablecell = [
    (int, 'col_span', 'colSpan'),
    (int, 'row_span', 'rowSpan'),
    (str, 'headers', 'headers'),
    (int, 'cell_index', 'cellIndex'),
    (str, 'align', 'align'),
    (str, 'axis', 'axis'),
    (str, 'height', 'height'),
    (str, 'width', 'width'),
    (str, 'ch', 'ch'),
    (str, 'ch_off', 'chOff'),
    (bool, 'no_wrap', 'noWrap'),
    (str, 'v_align', 'vAlign'),
    (str, 'bg_color', 'bgColor')
]

TableCellCollection = []

tableheadercell = [
    (str, 'scope', 'scope'),
    (str, 'abbr', 'abbr'),
    (str, 'sorted', 'sorted')
]

TableHeaderCellCollection = []

tabledatacell = [
    (str, 'abbr', 'abbr')
]

TableDataCellCollection = []

tablerow = [
    (int, 'row_index', 'rowIndex'),
    (int, 'section_row_index', 'sectionRowIndex'),
    (str, 'align', 'align'),
    (str, 'ch', 'ch'),
    (str, 'ch_off', 'chOff'),
    (str, 'v_align', 'vAlign'),
    (str, 'bg_color', 'bgColor')
]

TableRowCollection = []

tablesection = [
    (str, 'align', 'align'),
    (str, 'ch', 'ch'),
    (str, 'ch_off', 'chOff'),
    (str, 'v_align', 'vAlign')
]

TableSectionCollection = []

tablecol = [
    (str, 'align', 'align'),
    (str, 'ch', 'ch'),
    (str, 'ch_off', 'chOff'),
    (str, 'v_align', 'vAlign'),
    (str, 'width', 'width')
]

TableColCollection = []

tablecaption = [
    (str, 'align', 'align')
]

TableCaptionCollection = []

table = [
    (str, 'caption', 'caption'),
    (str, 't_head', 'tHead'),
    (str, 't_foot', 'tFoot'),
    (str, 't_bodies', 'tBodies'),
    (bool, 'sortable', 'sortable'),
    (str, 'align', 'align'),
    (str, 'border', 'border'),
    (str, 'frame', 'frame'),
    (str, 'rules', 'rules'),
    (str, 'summary', 'summary'),
    (str, 'width', 'width'),
    (str, 'bg_color', 'bgColor'),
    (str, 'cell_padding', 'cellPadding'),
    (str, 'cell_spacing', 'cellSpacing')
]

TableCollection = []

area = [
    (str, 'alt', 'alt'),
    (str, 'coords', 'coords'),
    (str, 'shape', 'shape'),
    (str, 'target', 'target'),
    (str, 'download', 'download'),
    (str, 'ping', 'ping'),
    (str, 'rel', 'rel'),
    (str, 'rel_list', 'relList'),
    (str, 'hreflang', 'hreflang'),
    (str, 'type', 'type'),
    (bool, 'no_href', 'noHref')
]

AreaCollection = []

map = [
    (str, 'name', 'name'),
    (str, 'areas', 'areas'),
    (str, 'images', 'images')
]

MapCollection = []

media = [
    (str, 'error', 'error'),
    (str, 'src', 'src'),
    (str, 'src_object', 'srcObject'),
    (str, 'current_src', 'currentSrc'),
    (str, 'cross_origin', 'crossOrigin'),
    (int, 'network_state', 'networkState'),
    (str, 'preload', 'preload'),
    (str, 'buffered', 'buffered'),
    (int, 'ready_state', 'readyState'),
    (bool, 'seeking', 'seeking'),
    (float, 'current_time', 'currentTime'),
    (float, 'duration', 'duration'),
    (bool, 'paused', 'paused'),
    (float, 'default_playback_rate', 'defaultPlaybackRate'),
    (float, 'playback_rate', 'playbackRate'),
    (str, 'played', 'played'),
    (str, 'seekable', 'seekable'),
    (bool, 'ended', 'ended'),
    (bool, 'autoplay', 'autoplay'),
    (bool, 'loop', 'loop'),
    (str, 'media_group', 'mediaGroup'),
    (str, 'controller', 'controller'),
    (bool, 'controls', 'controls'),
    (float, 'volume', 'volume'),
    (bool, 'muted', 'muted'),
    (bool, 'default_muted', 'defaultMuted'),
    (str, 'audio_tracks', 'audioTracks'),
    (str, 'video_tracks', 'videoTracks'),
    (str, 'text_tracks', 'textTracks')
]

MediaCollection = []

Audio = []

AudioCollection = []

video = [
    (int, 'width', 'width'),
    (int, 'height', 'height'),
    (int, 'video_width', 'videoWidth'),
    (int, 'video_height', 'videoHeight'),
    (str, 'poster', 'poster')
]

VideoCollection = []

track = [
    (str, 'kind', 'kind'),
    (str, 'src', 'src'),
    (str, 'srclang', 'srclang'),
    (str, 'label', 'label'),
    (bool, 'default', 'default'),
    (int, 'ready_state', 'readyState'),
    (str, 'track', 'track')
]

TrackCollection = []

param = [
    (str, 'name', 'name'),
    (str, 'value', 'value'),
    (str, 'type', 'type'),
    (str, 'value_type', 'valueType')
]

ParamCollection = []

object = [
    (str, 'data', 'data'),
    (str, 'type', 'type'),
    (bool, 'type_must_match', 'typeMustMatch'),
    (str, 'name', 'name'),
    (str, 'use_map', 'useMap'),
    (str, 'form', 'form'),
    (str, 'width', 'width'),
    (str, 'height', 'height'),
    (str, 'content_document', 'contentDocument'),
    (str, 'content_window', 'contentWindow'),
    (bool, 'will_validate', 'willValidate'),
    (str, 'validity', 'validity'),
    (str, 'validation_message', 'validationMessage'),
    (str, 'align', 'align'),
    (str, 'archive', 'archive'),
    (str, 'code', 'code'),
    (bool, 'declare', 'declare'),
    (int, 'hspace', 'hspace'),
    (str, 'standby', 'standby'),
    (int, 'vspace', 'vspace'),
    (str, 'code_base', 'codeBase'),
    (str, 'code_type', 'codeType'),
    (str, 'border', 'border')
]

ObjectCollection = []

embed = [
    (str, 'src', 'src'),
    (str, 'type', 'type'),
    (str, 'width', 'width'),
    (str, 'height', 'height'),
    (str, 'align', 'align'),
    (str, 'name', 'name')
]

EmbedCollection = []

iframe = [
    (str, 'src', 'src'),
    (str, 'srcdoc', 'srcdoc'),
    (str, 'name', 'name'),
    (str, 'sandbox', 'sandbox'),
    (bool, 'seamless', 'seamless'),
    (bool, 'allow_fullscreen', 'allowFullscreen'),
    (str, 'width', 'width'),
    (str, 'height', 'height'),
    (str, 'content_document', 'contentDocument'),
    (str, 'content_window', 'contentWindow'),
    (str, 'align', 'align'),
    (str, 'scrolling', 'scrolling'),
    (str, 'frame_border', 'frameBorder'),
    (str, 'long_desc', 'longDesc'),
    (str, 'margin_height', 'marginHeight'),
    (str, 'margin_width', 'marginWidth')
]

IFrameCollection = []

image = [
    (str, 'alt', 'alt'),
    (str, 'src', 'src'),
    (str, 'srcset', 'srcset'),
    (str, 'sizes', 'sizes'),
    (str, 'cross_origin', 'crossOrigin'),
    (str, 'use_map', 'useMap'),
    (bool, 'map', 'isMap'),
    (int, 'width', 'width'),
    (int, 'height', 'height'),
    (int, 'natural_width', 'naturalWidth'),
    (int, 'natural_height', 'naturalHeight'),
    (bool, 'complete', 'complete'),
    (str, 'current_src', 'currentSrc'),
    (str, 'name', 'name'),
    (str, 'lowsrc', 'lowsrc'),
    (str, 'align', 'align'),
    (int, 'hspace', 'hspace'),
    (int, 'vspace', 'vspace'),
    (str, 'long_desc', 'longDesc'),
    (str, 'border', 'border')
]

ImageCollection = []

source = [
    (str, 'srcset', 'srcset'),
    (str, 'sizes', 'sizes'),
    (str, 'media', 'media'),
    (str, 'src', 'src'),
    (str, 'type', 'type')
]

SourceCollection = []

Picture = []

PictureCollection = []

mod = [
    (str, 'cite', 'cite'),
    (str, 'date_time', 'dateTime')
]

ModCollection = []

br = [
    (str, 'clear', 'clear')
]

BRCollection = []

Span = []

SpanCollection = []

time = [
    (str, 'date_time', 'dateTime')
]

TimeCollection = []

data = [
    (str, 'value', 'value')
]

DataCollection = []

anchor = [
    (str, 'target', 'target'),
    (str, 'download', 'download'),
    (str, 'ping', 'ping'),
    (str, 'rel', 'rel'),
    (str, 'rel_list', 'relList'),
    (str, 'hreflang', 'hreflang'),
    (str, 'type', 'type'),
    (str, 'coords', 'coords'),
    (str, 'charset', 'charset'),
    (str, 'name', 'name'),
    (str, 'rev', 'rev'),
    (str, 'shape', 'shape')
]

AnchorCollection = []

div = [
    (str, 'align', 'align')
]

DivCollection = []

dlist = [
    (bool, 'compact', 'compact')
]

DListCollection = []

li = [
    (int, 'value', 'value'),
    (str, 'type', 'type')
]

LICollection = []

ulist = [
    (bool, 'compact', 'compact'),
    (str, 'type', 'type')
]

UListCollection = []

olist = [
    (bool, 'reversed', 'reversed'),
    (int, 'start', 'start'),
    (str, 'type', 'type'),
    (bool, 'compact', 'compact')
]

OListCollection = []

quote = [
    (str, 'cite', 'cite')
]

QuoteCollection = []

pre = [
    (int, 'width', 'width')
]

PreCollection = []

hr = [
    (str, 'align', 'align'),
    (str, 'color', 'color'),
    (bool, 'no_shade', 'noShade'),
    (str, 'size', 'size'),
    (str, 'width', 'width')
]

HRCollection = []

paragraph = [
    (str, 'align', 'align')
]

ParagraphCollection = []

heading = [
    (str, 'align', 'align')
]

HeadingCollection = []

body = [
    (str, 'link', 'link'),
    (str, 'v_link', 'vLink'),
    (str, 'a_link', 'aLink'),
    (str, 'bg_color', 'bgColor'),
    (str, 'background', 'background'),
    (str, 'onafterprint', 'onafterprint'),
    (str, 'onbeforeprint', 'onbeforeprint'),
    (str, 'onbeforeunload', 'onbeforeunload'),
    (str, 'onhashchange', 'onhashchange'),
    (str, 'onlanguagechange', 'onlanguagechange'),
    (str, 'onmessage', 'onmessage'),
    (str, 'onoffline', 'onoffline'),
    (str, 'ononline', 'ononline'),
    (str, 'onpagehide', 'onpagehide'),
    (str, 'onpageshow', 'onpageshow'),
    (str, 'onpopstate', 'onpopstate'),
    (str, 'onstorage', 'onstorage'),
    (str, 'onunload', 'onunload')
]

BodyCollection = []

style = [
    (str, 'media', 'media'),
    (str, 'type', 'type'),
    (bool, 'scoped', 'scoped')
]

StyleCollection = []

meta = [
    (str, 'name', 'name'),
    (str, 'http_equiv', 'httpEquiv'),
    (str, 'content', 'content'),
    (str, 'scheme', 'scheme')
]

MetaCollection = []

base = [
    (str, 'href', 'href'),
    (str, 'target', 'target')
]

BaseCollection = []

Title = []

TitleCollection = []

Head = []

HeadCollection = []

html = [
    (str, 'version', 'version')
]

HtmlCollection = []

Unknown = []

UnknownCollection = []
