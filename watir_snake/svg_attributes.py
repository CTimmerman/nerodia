# Autogenerated from SVG specification. Edits may be lost.

svgelement = [
    (str, 'class_name', 'className'),
    (str, 'style', 'style'),
    (str, 'ownersvg_element', 'ownerSVGElement'),
    (str, 'viewport_element', 'viewportElement'),
    (int, 'tab_index', 'tabIndex')
]

SVGElementCollection = []

mpath = [
    (str, 'href', 'href')
]

MPathCollection = []

animation = [
    (str, 'target_element', 'targetElement'),
    (str, 'onbegin', 'onbegin'),
    (str, 'onend', 'onend'),
    (str, 'onrepeat', 'onrepeat'),
    (str, 'required_features', 'requiredFeatures'),
    (str, 'required_extensions', 'requiredExtensions'),
    (str, 'system_language', 'systemLanguage')
]

AnimationCollection = []

AnimateTransform = []

AnimateTransformCollection = []

AnimateMotion = []

AnimateMotionCollection = []

Set = []

SetCollection = []

Animate = []

AnimateCollection = []

view = [
    (str, 'view_target', 'viewTarget'),
    (str, 'view_box', 'viewBox'),
    (str, 'preserve_aspect_ratio', 'preserveAspectRatio'),
    (int, 'zoom_and_pan', 'zoomAndPan')
]

ViewCollection = []

cursor = [
    (int, 'x', 'x'),
    (int, 'y', 'y'),
    (str, 'href', 'href')
]

CursorCollection = []

pattern = [
    (str, 'pattern_units', 'patternUnits'),
    (str, 'pattern_content_units', 'patternContentUnits'),
    (str, 'pattern_transform', 'patternTransform'),
    (int, 'x', 'x'),
    (int, 'y', 'y'),
    (int, 'width', 'width'),
    (int, 'height', 'height'),
    (str, 'view_box', 'viewBox'),
    (str, 'preserve_aspect_ratio', 'preserveAspectRatio'),
    (str, 'href', 'href')
]

PatternCollection = []

stop = [
    (str, 'offset', 'offset')
]

StopCollection = []

MeshPatch = []

MeshPatchCollection = []

MeshRow = []

MeshRowCollection = []

gradient = [
    (str, 'gradient_units', 'gradientUnits'),
    (str, 'gradient_transform', 'gradientTransform'),
    (str, 'spread_method', 'spreadMethod'),
    (str, 'href', 'href')
]

GradientCollection = []

meshgradient = [
    (int, 'x', 'x'),
    (int, 'y', 'y')
]

MeshGradientCollection = []

radialgradient = [
    (int, 'cx', 'cx'),
    (int, 'cy', 'cy'),
    (int, 'r', 'r'),
    (int, 'fx', 'fx'),
    (int, 'fy', 'fy'),
    (int, 'fr', 'fr')
]

RadialGradientCollection = []

lineargradient = [
    (int, 'x1', 'x1'),
    (int, 'y1', 'y1'),
    (int, 'x2', 'x2'),
    (int, 'y2', 'y2')
]

LinearGradientCollection = []

marker = [
    (int, 'refx', 'refX'),
    (int, 'refy', 'refY'),
    (str, 'marker_units', 'markerUnits'),
    (int, 'marker_width', 'markerWidth'),
    (int, 'marker_height', 'markerHeight'),
    (str, 'orient_type', 'orientType'),
    (str, 'orient_angle', 'orientAngle'),
    (str, 'orient', 'orient'),
    (str, 'view_box', 'viewBox'),
    (str, 'preserve_aspect_ratio', 'preserveAspectRatio')
]

MarkerCollection = []

symbol = [
    (str, 'view_box', 'viewBox'),
    (str, 'preserve_aspect_ratio', 'preserveAspectRatio')
]

SymbolCollection = []

Metadata = []

MetadataCollection = []

Desc = []

DescCollection = []

graphics = [
    (str, 'transform', 'transform'),
    (str, 'required_features', 'requiredFeatures'),
    (str, 'required_extensions', 'requiredExtensions'),
    (str, 'system_language', 'systemLanguage')
]

GraphicsCollection = []

foreignobject = [
    (int, 'x', 'x'),
    (int, 'y', 'y'),
    (int, 'width', 'width'),
    (int, 'height', 'height')
]

ForeignObjectCollection = []

textcontent = [
    (int, 'text_length', 'textLength'),
    (str, 'length_adjust', 'lengthAdjust')
]

TextContentCollection = []

textpath = [
    (int, 'start_offset', 'startOffset'),
    (str, 'method', 'method'),
    (str, 'spacing', 'spacing'),
    (str, 'href', 'href'),
    (str, 'path_seg_list', 'pathSegList'),
    (str, 'animated_path_seg_list', 'animatedPathSegList')
]

TextPathCollection = []

textpositioning = [
    (str, 'x', 'x'),
    (str, 'y', 'y'),
    (str, 'dx', 'dx'),
    (str, 'dy', 'dy'),
    (str, 'rotate', 'rotate')
]

TextPositioningCollection = []

TSpan = []

TSpanCollection = []

Switch = []

SwitchCollection = []

use = [
    (int, 'x', 'x'),
    (int, 'y', 'y'),
    (int, 'width', 'width'),
    (int, 'height', 'height'),
    (str, 'href', 'href')
]

UseCollection = []

Defs = []

DefsCollection = []

G = []

GCollection = []

svg = [
    (int, 'x', 'x'),
    (int, 'y', 'y'),
    (int, 'width', 'width'),
    (int, 'height', 'height'),
    (str, 'viewport', 'viewport'),
    (bool, 'use_current_view', 'useCurrentView'),
    (str, 'current_view', 'currentView'),
    (float, 'current_scale', 'currentScale'),
    (str, 'current_translate', 'currentTranslate'),
    (str, 'view_box', 'viewBox'),
    (str, 'preserve_aspect_ratio', 'preserveAspectRatio'),
    (int, 'zoom_and_pan', 'zoomAndPan')
]

SVGCollection = []

Geometry = []

GeometryCollection = []

polygon = [
    (str, 'points', 'points'),
    (str, 'animated_points', 'animatedPoints')
]

PolygonCollection = []

polyline = [
    (str, 'points', 'points'),
    (str, 'animated_points', 'animatedPoints')
]

PolylineCollection = []

line = [
    (int, 'x1', 'x1'),
    (int, 'y1', 'y1'),
    (int, 'x2', 'x2'),
    (int, 'y2', 'y2')
]

LineCollection = []

ellipse = [
    (int, 'cx', 'cx'),
    (int, 'cy', 'cy'),
    (int, 'rx', 'rx'),
    (int, 'ry', 'ry')
]

EllipseCollection = []

circle = [
    (int, 'cx', 'cx'),
    (int, 'cy', 'cy'),
    (int, 'r', 'r')
]

CircleCollection = []

rect = [
    (int, 'x', 'x'),
    (int, 'y', 'y'),
    (int, 'width', 'width'),
    (int, 'height', 'height'),
    (int, 'rx', 'rx'),
    (int, 'ry', 'ry')
]

RectCollection = []

path = [
    (str, 'path_length', 'pathLength'),
    (str, 'path_seg_list', 'pathSegList'),
    (str, 'animated_path_seg_list', 'animatedPathSegList')
]

PathCollection = []

